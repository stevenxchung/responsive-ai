import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import ReactModal from "react-modal";
import { handleSubmit } from "../utils/gpt-script";

interface InfoModalProps {
  isOpen: boolean;
  closeModal: () => void;
}

const InfoModal: React.FC<InfoModalProps> = ({ isOpen, closeModal }) => {
  const modalStyles = {
    content: {
      width: "50%",
      height: "25%",
      margin: "auto",
      background: "#f5f5f5",
      border: "none",
      borderRadius: "8px",
      padding: "20px",
      display: "flex",
      flexDirection: "column",
      justifyContent: "space-between",
    },
    overlay: {
      backgroundColor: "rgba(0, 0, 0, 0.5)",
    },
  };

  return (
    <ReactModal
      isOpen={isOpen}
      onRequestClose={closeModal}
      style={modalStyles as ReactModal.Styles}
      shouldCloseOnOverlayClick={false}
    >
      <h2>Note</h2>
      <p>
        I initially created this integration so people would not have to
        register directly on OpenAI. However, since my token recently expired,
        users will not be able to submit queries as I have not decided to renew
        their API plan as of writing. Please refer to the
        <Link href="https://github.com/stevenxchung/responsive-ai">
          &nbsp;responsive-ai&nbsp;
        </Link>
        repository for more information on how to run the app locally if you
        have an OpenAI API key.
      </p>
      <div
        style={{
          display: "flex",
          justifyContent: "flex-end",
        }}
      >
        <button onClick={closeModal}>
          <h2>OK</h2>
        </button>
      </div>
    </ReactModal>
  );
};

export default function Home() {
  useEffect(() => {
    const listener = (event: KeyboardEvent) => {
      if (event.key === "Enter" || event.code === "NumpadEnter") {
        console.log("Enter key was pressed. Running your function...");
        handleSubmit(event);
      }
    };
    document.addEventListener("keydown", listener);
    return () => {
      document.removeEventListener("keydown", listener);
    };
  }, []);

  const [showModal, setShowModal] = useState(true);

  const closeModal = () => {
    setShowModal(false);
  };

  return (
    <>
      <Head>
        <title>Responsive AI</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <div className="app">
        <InfoModal isOpen={showModal} closeModal={closeModal} />
        <div className="chat_container"></div>
        <div className="input_container">
          <form className="form" onSubmit={handleSubmit}>
            <textarea
              name="prompt"
              cols={1}
              rows={1}
              placeholder="Ask AI..."
            ></textarea>
            <button type="submit">
              <Image
                src={`/assets/send.svg`}
                alt="send"
                width={500}
                height={500}
              />
            </button>
          </form>
        </div>
      </div>
    </>
  );
}
